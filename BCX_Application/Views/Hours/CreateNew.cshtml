@model BCX_CORE.DTOs.Hours.HourDto  

@{
    ViewData["Title"] = "CreateNew";
}
<html>
<head>

</head>


<body>

    <h1>Capture Hours</h1>

    <h4>List Employees against Tasks</h4>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.HiddenFor(c => c.Id)

                <fieldset>
                    <table class="table table-hover" id="tblHours">

                        <thead>
                            <tr>
                                <th scope="col">Employee Id</th>
                                <th scope="col">Employee</th>
                                <th scope="col">Task Id</th>
                                <th scope="col">Task</th>
                                <th scope="col">Hours against Task</th>
                                <th scope="col">Day</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>
                                </td>
                                <td>
                                    <div class="form-group">
                                        <select class="custom-select" asp-items="ViewBag.Employees" name="Employees" id="Employees"></select>
                                    </div>
                                </td>
                                <td>
                                </td>
                                <td>
                                    <div class="form-group">
                                        <select class="custom-select" id="Tasks">
                                            <option selected>Select Employee First</option>
                                        </select>
                                    </div>
                                </td>
                                <td style="max-width: 30px">
                                    <input class="form-control form-control" type="text" id="txtquantity" />
                                </td>

                                

                                <td>
                                    @*<input type="text" id="datepicker" name="datepicker" class="form-control">*@
                                    @*@Html.EditorFor(model => model.DateWorked, new { htmlAttributes = new { @class = "form-control", @name = "dateworked", @id = "dateworked" } })*@
                                    <input asp-for="@Model.DateWorked" id="dateworked" type="text" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="@Model.DateWorked" class="text-warning"></span>
                                </td>

                                <td><button type="button" class="btn btn btn-outline-info" id="btnAdd" value="Add">Add</button></td>
                            </tr>
                        </tfoot>
                    </table>
                    <br />
                </fieldset>

                <div class="form-group">
                    @*<input type="submit" value="Create" asp-controller="EmployeeTasks" asp-action="CreateNew" class="btn btn-primary" />*@
                    <input type="button" class="btn btn-primary" id="btnSave" value="Save" />
                </div>
            </form>
        </div>

        <div aria-live="polite" aria-atomic="true" class="d-flex justify-content-center align-items-center">
            <div style="position: absolute; top: 60px; right: 30px;">
                <div class="toast" id="alreadyadded" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000" data-autohide="true">
                    <div class="toast-header">
                        @*<img src="..." class="rounded mr-2" alt="...">*@
                        <strong class="mr-auto">Employee was not added</strong>
                        @*<small class="text-muted">just now</small>*@
                        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="toast-body">
                        This employee has already been listed for this task.
                    </div>
                </div>
            </div>

            <div style="position: absolute; top: 60px; right: 30px;">
                <div class="toast" id="added" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000" data-autohide="true">
                    <div class="toast-header">
                        @*<img src="..." class="rounded mr-2" alt="...">*@
                        <strong class="mr-auto">Employee was added</strong>
                        @*<small class="text-muted">just now</small>*@
                        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="toast-body">
                        Employee assigned to this task.
                    </div>
                </div>
            </div>

            <div style="position: absolute; top: 60px; right: 30px;">
                <div class="toast" id="removed" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000" data-autohide="true">
                    <div class="toast-header">
                        @*<img src="..." class="rounded mr-2" alt="...">*@
                        <strong class="mr-auto">Employee was removed</strong>
                        @*<small class="text-muted">just now</small>*@
                        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="toast-body">
                        Employee removed from this task.
                    </div>
                </div>
            </div>

            <div style="position: absolute; top: 60px; right: 30px;">
                <div class="toast" id="listempty" role="alert" aria-live="assertive" aria-atomic="true" data-delay="5000" data-autohide="true">
                    <div class="toast-header">
                        @*<img src="..." class="rounded mr-2" alt="...">*@
                        <strong class="mr-auto">No employees assigned</strong>
                        @*<small class="text-muted">just now</small>*@
                        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="toast-body">
                        Please check your list. It appears to be empty. Please assign employees to this task before attempting to save it.
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>

    @*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">*@
    @*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@

    <script type="text/javascript">

        class clsHour {
            constructor() {
                this.employees = [];
                this.Init();
                this.taskId = 0;
            }

            Init() {
                $(document).ready(function () {

                    //employeeTask.taskId = $("#TaskId").val();

                    //$("#dateworked").datepicker();

                    $('#Employees').change(function () {
                        //Load tasks for this employee on Employee select
                        var selectedId = $("#Employees").val();

                        //Make ajax request to controller instead of API controller, because API is configured in Font layer
                        $.ajax({
                            type: 'GET',
                            url: '/EmployeeTasks/TasksByEmployeeId?Id=' + selectedId,
                            data: JSON.stringify(selectedId),
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            success: function (response) {
                                //Build select list object and assign value to dom object
                                var tasksSelect = document.getElementById("Tasks");

                                //Empty tasks list
                                $('#Tasks').empty();

                                // get reference to select element
                                var sel = document.getElementById('Tasks');
                                $(response.tasks).each(function (task) {
                                    var opt = document.createElement('option');

                                    // create text node to add to option element (opt)
                                    opt.appendChild(document.createTextNode(this.name));

                                    // set value property of opt
                                    opt.value = this.id;

                                    sel.appendChild(opt);
                                });
                            }
                        });
                    });

                    $('#btnAdd').click(function () {
                        var selectedId = $("#Employees").val();
                        var selectedTaskId = $("#Tasks").val();
                        //Check existing employees first
                        if (hour.employees.includes(selectedId)) {
                            //Already exists, show prompt
                            $("#alreadyadded").toast('show');
                        }
                        else {
                            //Add selected Id to list
                            hour.employees.push(selectedId);
                            var table = $("#tblHours > TBODY")[0];
                            var row = table.insertRow(-1);

                            //Set references
                            var cell1 = row.insertCell(0); //Emp Id
                            var cell2 = row.insertCell(0); //Emp name
                            var cell3 = row.insertCell(0); //taskId
                            var cell4 = row.insertCell(0); //Task
                            var cell5 = row.insertCell(0); //Quantity
                            var cell6 = row.insertCell(0); //Date
                            var cell7 = row.insertCell(0); //button

                            //Set referenced properties
                            cell7.innerHTML = selectedId;
                            cell6.innerHTML = $("#Employees option:selected").text();

                            cell5.innerHTML = selectedTaskId;
                            cell4.innerHTML = $("#Tasks option:selected").text();

                            cell3.innerHTML = $("#txtquantity").val();
                            cell2.innerHTML = $("#dateworked").val();

                            cell1.innerHTML = "<button type='button' class='btn btn btn-outline-warning' value='Remove' id='btnRemove' onclick='hour.Remove(this)' >Remove</button>";

                            $("#added").toast('show');
                            $('#btnAdd').hide();

                        }
                    });

                    $('#btnSave').click(function () {
                        //Loop through the Table rows and build a JSON array.
                        //var customer = {
                        //    Id: $("#customerid").val(),
                        //    Name: $("#customerid option:selected").text(),
                        //    Order: ''
                        //};
                        if (hour.employees.length <= 0) {
                            $("#listempty").toast('show');
                        }
                        else {

                            //var order = {
                            //    Id: $("#Id").val(),
                            //    Customer: customer,
                            //    OrderDate: $("#orderdate").val(),
                            //    Lines: []
                            //};

                            //var hourCollection = {
                            //    //TaskId: parseInt(employeeTask.taskId),
                            //    Hours: []
                            //};
                            var hourDto = {};

                            //var orders = new Array();
                            $("#tblHours TBODY TR").each(function () {

                                var row = $(this);

                                //var hourDto = {};
                                hourDto.Id = 0;
                                hourDto.Total = 0;
                                hourDto.RoleRateAtTime = 0;
                                hourDto.EmployeeId = parseInt(row.find("TD").eq(0).html());
                                hourDto.TaskId = parseInt(row.find("TD").eq(2).html());
                                hourDto.HoursWorked = parseInt(row.find("TD").eq(4).html());
                                hourDto.DateWorked = row.find("TD").eq(5).html();

                                //employeeTaskCollection.EmployeeTasks.push(hourDto);
                            });

                            //stringify the data
                            var data2send = JSON.stringify(hourDto);

                            //Make ajax request to controller instead of API controller
                            $.ajax({
                                type: 'POST',
                                url: '/Hours/CreateNew',
                                data: data2send,
                                contentType: 'application/json; charset=utf-8',
                                dataType: 'json',
                                success: function (r) {
                                    //alert(r + " record(s) inserted.");
                                }
                            });
                        }
                    });

                });
            };

            Remove(button) {
                //Determine the reference of the Row using the Button.
                var row = $(button).closest("TR");
                var selectedId = $("TD", row).eq(0).html();
                var table = $("#tblHours")[0];
                //var position = employeeTask.employees.indexOf(parseInt(selectedId));
                var position = hour.employees.indexOf(selectedId);


                if (hour.employees.includes(selectedId)) {
                    //Exists in list, show prompt and remove
                    //Delete the Table row using it's Index.
                    table.deleteRow(row[0].rowIndex);
                    hour.employees.splice(position, 1);
                    $("#removed").toast('show');
                    $('#btnAdd').show();
                }
            };
        };

        hour = new clsHour();


    </script>

</body>
    </html>
